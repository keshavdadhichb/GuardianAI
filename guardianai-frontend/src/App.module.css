:root {
  --dark-blue: #0a0f1c;
  --light-text: #e8f4f8;
  --gold: #ffd700;
  --dark-text: #1a1a2e;
  /* From second snippet, similar to gold but slightly different */
  --custom-gold: #d4af37;
  --light-gray: #e6e6e6;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  overflow-x: hidden;
  font-family: "Inter", -apple-system, BlinkMacSystemFont, sans-serif;
  /* Merge background from first snippet */
  background: radial-gradient(ellipse at center, #1a2332 0%, #0a0f1c 70%, #000510 100%);
  color: var(--light-text);
}

.container {
  min-height: 100vh;
  display: flex;
  position: relative;
  /* The second container snippet defines a simple flex column.
     The first snippet defines a full-screen container with a background.
     We will use the first snippet's full-screen properties and add the
     flex-direction from the second snippet for content alignment.
  */
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  padding: 20px;
  overflow: hidden;
}

/* Animated background particles */
.container::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: radial-gradient(2px 2px at 20px 30px, rgba(255, 215, 0, 0.3), transparent),
    radial-gradient(2px 2px at 40px 70px, rgba(255, 215, 0, 0.2), transparent),
    radial-gradient(1px 1px at 90px 40px, rgba(255, 215, 0, 0.4), transparent),
    radial-gradient(1px 1px at 130px 80px, rgba(255, 215, 0, 0.2), transparent),
    radial-gradient(2px 2px at 160px 30px, rgba(255, 215, 0, 0.3), transparent);
  background-repeat: repeat;
  background-size: 200px 100px;
  animation: particleFloat 20s linear infinite;
  pointer-events: none;
}

.container::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    45deg,
    rgba(255, 215, 0, 0.05) 0%,
    transparent 25%,
    transparent 75%,
    rgba(26, 35, 50, 0.1) 100%
  );
  animation: gradientShift 15s ease-in-out infinite;
  pointer-events: none;
}

/* Shooting stars animation */
.shootingStars {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 1;
}

.shootingStar {
  position: absolute;
  width: 2px;
  height: 2px;
  background: linear-gradient(45deg, rgba(255, 215, 0, 1), rgba(255, 215, 0, 0));
  border-radius: 50%;
  box-shadow: 0 0 6px rgba(255, 215, 0, 0.8);
}

.shootingStar:nth-child(1) {
  top: 10%;
  left: 10%;
  animation: shootingStar1 8s linear infinite;
}

.shootingStar:nth-child(2) {
  top: 30%;
  left: 80%;
  animation: shootingStar2 12s linear infinite 2s;
}

.shootingStar:nth-child(3) {
  top: 60%;
  left: 20%;
  animation: shootingStar3 10s linear infinite 4s;
}

.shootingStar:nth-child(4) {
  top: 80%;
  left: 70%;
  animation: shootingStar4 15s linear infinite 6s;
}

.shootingStar:nth-child(5) {
  top: 20%;
  left: 50%;
  animation: shootingStar5 9s linear infinite 8s;
}

/* Intro overlay with perfect center alignment */
.introOverlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background: radial-gradient(ellipse at center, #ffd700 0%, #ffed4e 30%, #ffa500 70%, #ff8c00 100%);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  animation: goldPulse 1.5s ease-in-out;
}

.introTitle {
  font-size: 11.25rem;
  font-weight: 800;
  color: var(--dark-text);
  text-shadow: 0 0 50px rgba(26, 26, 46, 0.3);
  animation: introTitleGlow 1.5s ease-in-out;
}

/* Main content container with proper flex layout */
.mainContent {
  width: 100%;
  height: 100vh;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 4rem;
  position: relative;
  z-index: 2;
  opacity: 0;
  transform: translateY(20px);
  transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1);
  /* The second snippet's .container essentially serves as a .mainContent.
     We will keep the first .mainContent and its animations and apply
     the second snippets content layout styles inside it. */
  flex-direction: column;
  justify-content: flex-start; /* To allow space for the verdict box and controls below the header */
}

/* Header from the second snippet, overriding the first one.
   It's simpler and centered for the new layout. */
.header {
  font-size: 6vw;
  font-weight: 800;
  color: var(--custom-gold);
  margin-bottom: 20px;
  text-shadow: none; /* Remove text-shadow from the first snippet */
  animation: none; /* Remove headerGlow from the first snippet */
}

/* Verdict box and controls from the second snippet */
.verdictBox {
  min-height: 80px;
  width: 80%;
  max-width: 600px;
  background-color: rgba(255, 255, 255, 0.05);
  border: 1px solid #333;
  border-radius: 12px;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 20px;
  margin-bottom: 40px;
  font-size: 1.2rem;
  color: var(--light-gray);
  font-style: italic;
}

.controls {
  display: flex;
  gap: 20px;
}

.controlButton {
  background-color: var(--custom-gold);
  color: #111;
  border: none;
  padding: 15px 30px;
  border-radius: 8px;
  cursor: pointer;
  font-size: 16px;
  font-weight: 600;
  transition: all 0.2s ease;
}

.controlButton:hover:not(:disabled) {
  transform: translateY(-3px);
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
}

.controlButton:disabled {
  background-color: #555;
  color: #999;
  cursor: not-allowed;
}

.textSection {
  /* This section is from the first snippet.
     We'll modify it to fit the new layout, but keep the core idea. */
  flex: 1;
  display: flex;
  flex-direction: column;
  align-items: center; /* Center the text for the new layout */
  justify-content: center;
  text-align: center;
}

.subtitleContainer {
  margin-left: 0;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  align-items: center;
}

.subtitleLine {
  font-size: 3.6rem;
  font-weight: 700;
  color: var(--gold);
  line-height: 1.2;
  background: linear-gradient(90deg, var(--gold) 0%, #ffed4e 25%, var(--gold) 50%, #ffed4e 75%, var(--gold) 100%);
  background-size: 200% 100%;
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  animation: shimmer 3s ease-in-out infinite;
}

.cursor {
  color: var(--gold);
  animation: blink 1s infinite;
  font-weight: 400;
}

/* Button section from first snippet, modified to work with the second. */
.buttonSection {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  /* Add margin to separate from other elements if needed */
  margin-top: 40px;
}

/* Keep the rest of the button styles and animations from the first snippet */
.ctaButton {
  padding: 1.2rem 3rem;
  font-size: 1.3rem;
  font-weight: 600;
  color: var(--dark-text);
  background: linear-gradient(135deg, var(--gold) 0%, #ffed4e 50%, var(--gold) 100%);
  border: none;
  border-radius: 50px;
  cursor: pointer;
  position: relative;
  overflow: hidden;
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  box-shadow: 0 10px 30px rgba(255, 215, 0, 0.3), 0 0 0 1px rgba(255, 215, 0, 0.2), inset 0 1px 0
    rgba(255, 255, 255, 0.2);
  opacity: 1;
  min-width: 280px;
  user-select: none;
  -webkit-tap-highlight-color: transparent;
}

.buttonText {
  position: relative;
  z-index: 2;
  display: inline-block;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.buttonRipple {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  background: radial-gradient(circle, rgba(255, 255, 255, 0.8) 0%, rgba(255, 255, 255, 0.3) 40%, transparent 70%);
  border-radius: 50%;
  transform: translate(-50%, -50%);
  transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);
  pointer-events: none;
  z-index: 1;
}

.ctaButton:hover {
  transform: translateY(-5px) scale(1.08);
  box-shadow: 0 25px 50px rgba(255, 215, 0, 0.5), 0 0 0 3px rgba(255, 215, 0, 0.4), inset 0 2px 0
    rgba(255, 255, 255, 0.4);
  background: linear-gradient(135deg, #ffed4e 0%, var(--gold) 50%, #ffed4e 100%);
  filter: brightness(1.1) saturate(1.2);
}

.ctaButton:hover::before {
  left: 100%;
}

.ctaButton:active {
  transform: translateY(-2px) scale(1.04);
  transition: all 0.1s cubic-bezier(0.4, 0, 0.2, 1);
}

.ctaButton:active .buttonRipple {
  width: 400px;
  height: 400px;
  opacity: 0;
  transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1);
}

.ctaButton.loading {
  background: linear-gradient(135deg, #4a90e2 0%, #357abd 50%, #4a90e2 100%);
  cursor: wait;
  animation: loadingPulse 1.5s ease-in-out infinite;
  pointer-events: none;
}

.ctaButton.loading .buttonText {
  animation: loadingText 1.5s ease-in-out infinite;
}

.ctaButton.success {
  background: linear-gradient(135deg, #4caf50 0%, #45a049 50%, #4caf50 100%);
  animation: successCelebration 0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  box-shadow: 0 15px 35px rgba(76, 175, 80, 0.4), 0 0 0 3px rgba(76, 175, 80, 0.3);
}

.ctaButton.success .buttonText {
  animation: successTextBounce 0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.ctaButton.error {
  background: linear-gradient(135deg, #f44336 0%, #d32f2f 50%, #f44336 100%);
  animation: errorShake 0.6s cubic-bezier(0.36, 0.07, 0.19, 0.97);
  box-shadow: 0 10px 30px rgba(244, 67, 54, 0.4), 0 0 0 2px rgba(244, 67, 54, 0.3);
}

.ctaButton:disabled {
  cursor: not-allowed;
  opacity: 0.8;
}

.ctaButton:focus-visible {
  outline: none;
  box-shadow: 0 10px 30px rgba(255, 215, 0, 0.3), 0 0 0 3px rgba(255, 215, 0, 0.6), inset 0 1px 0
    rgba(255, 255, 255, 0.2);
}

.revealed {
  opacity: 1 !important;
  transform: translateY(0) !important;
}

.webcamHidden {
  display: none;
}

.statusText {
  font-weight: bold;
  color: var(--gold);
}

.leftPane::before {
  content: "";
  position: absolute;
  top: 20%;
  left: -10%;
  width: 60%;
  height: 60%;
  background: radial-gradient(ellipse, rgba(255, 215, 0, 0.1) 0%, transparent 70%);
  border-radius: 50%;
  animation: pulseGlow 4s ease-in-out infinite;
  pointer-events: none;
}

/* Animations */
@keyframes shootingStar1 {
  0% { transform: translateX(-100px) translateY(-100px) scale(0); opacity: 0; }
  10% { opacity: 1; transform: translateX(-50px) translateY(-50px) scale(1); }
  90% { opacity: 1; transform: translateX(300px) translateY(300px) scale(1); }
  100% { transform: translateX(400px) translateY(400px) scale(0); opacity: 0; }
}
@keyframes shootingStar2 {
  0% { transform: translateX(100px) translateY(-100px) scale(0); opacity: 0; }
  10% { opacity: 1; transform: translateX(50px) translateY(-50px) scale(1); }
  90% { opacity: 1; transform: translateX(-300px) translateY(300px) scale(1); }
  100% { transform: translateX(-400px) translateY(400px) scale(0); opacity: 0; }
}
@keyframes shootingStar3 {
  0% { transform: translateX(-80px) translateY(-80px) scale(0); opacity: 0; }
  10% { opacity: 1; transform: translateX(-40px) translateY(-40px) scale(1); }
  90% { opacity: 1; transform: translateX(250px) translateY(250px) scale(1); }
  100% { transform: translateX(320px) translateY(320px) scale(0); opacity: 0; }
}
@keyframes shootingStar4 {
  0% { transform: translateX(120px) translateY(-120px) scale(0); opacity: 0; }
  10% { opacity: 1; transform: translateX(60px) translateY(-60px) scale(1); }
  90% { opacity: 1; transform: translateX(-280px) translateY(280px) scale(1); }
  100% { transform: translateX(-360px) translateY(360px) scale(0); opacity: 0; }
}
@keyframes shootingStar5 {
  0% { transform: translateX(-60px) translateY(-60px) scale(0); opacity: 0; }
  10% { opacity: 1; transform: translateX(-30px) translateY(-30px) scale(1); }
  90% { opacity: 1; transform: translateX(200px) translateY(200px) scale(1); }
  100% { transform: translateX(260px) translateY(260px) scale(0); opacity: 0; }
}
@keyframes particleFloat {
  0% { transform: translateY(0px) translateX(0px); }
  33% { transform: translateY(-20px) translateX(10px); }
  66% { transform: translateY(-10px) translateX(-5px); }
  100% { transform: translateY(0px) translateX(0px); }
}
@keyframes gradientShift {
  0%, 100% { opacity: 0.3; transform: rotate(0deg) scale(1); }
  50% { opacity: 0.6; transform: rotate(1deg) scale(1.02); }
}
@keyframes goldPulse {
  0% { background: radial-gradient(ellipse at center, #ffd700 0%, #ffed4e 30%, #ffa500 70%, #ff8c00 100%); transform: scale(1); }
  50% { background: radial-gradient(ellipse at center, #ffed4e 0%, #ffd700 30%, #ff8c00 70%, #ffa500 100%); transform: scale(1.02); }
  100% { background: radial-gradient(ellipse at center, #ffd700 0%, #ffed4e 30%, #ffa500 70%, #ff8c00 100%); transform: scale(1); }
}
@keyframes introTitleGlow {
  0% { transform: scale(0.8); opacity: 0; }
  50% { transform: scale(1.1); opacity: 1; text-shadow: 0 0 80px rgba(26, 26, 46, 0.5); }
  100% { transform: scale(1); opacity: 1; text-shadow: 0 0 50px rgba(26, 26, 46, 0.3); }
}
@keyframes loadingPulse {
  0%, 100% { box-shadow: 0 10px 30px rgba(74, 144, 226, 0.4), 0 0 0 2px rgba(74, 144, 226, 0.3); transform: translateY(-3px) scale(1.02); }
  50% { box-shadow: 0 15px 40px rgba(74, 144, 226, 0.6), 0 0 0 4px rgba(74, 144, 226, 0.5); transform: translateY(-4px) scale(1.05); }
}
@keyframes loadingText {
  0%, 100% { opacity: 0.8; }
  50% { opacity: 1; }
}
@keyframes successCelebration {
  0% { transform: translateY(-3px) scale(1.05); }
  50% { transform: translateY(-8px) scale(1.15); }
  100% { transform: translateY(-3px) scale(1.08); }
}
@keyframes successTextBounce {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-2px); }
}
@keyframes errorShake {
  0%, 100% { transform: translateY(-3px) translateX(0); }
  25% { transform: translateY(-3px) translateX(-5px); }
  75% { transform: translateY(-3px) translateX(5px); }
}
@keyframes pulseGlow {
  0%, 100% { opacity: 0.3; transform: scale(1); }
  50% { opacity: 0.6; transform: scale(1.1); }
}
@keyframes headerGlow {
  0% { text-shadow: 0 0 30px rgba(232, 244, 248, 0.3), 0 0 60px rgba(232, 244, 248, 0.1); transform: scale(1); }
  100% { text-shadow: 0 0 40px rgba(232, 244, 248, 0.5), 0 0 80px rgba(232, 244, 248, 0.2); transform: scale(1.02); }
}
@keyframes shimmer {
  0%, 100% { background-position: 200% 0; }
  50% { background-position: -200% 0; }
}

/* Media Queries from the first snippet, modified for the new layout */
@media (max-width: 768px) {
  .container {
    flex-direction: column;
    padding: 2rem;
  }
  .mainContent {
    flex-direction: column;
    padding: 2rem;
    text-align: center;
  }
  .textSection {
    align-items: center;
    margin-bottom: 3rem;
  }
  .introTitle {
    font-size: 4rem;
  }
  .header {
    font-size: 6rem;
    margin-left: 0;
    text-align: center;
  }
  .subtitleContainer {
    margin-left: 0;
    align-items: center;
  }
  .subtitleLine {
    font-size: 2.4rem;
    text-align: center;
  }
  .ctaButton {
    padding: 1rem 2.5rem;
    font-size: 1.1rem;
    min-width: 250px;
    min-height: 56px;
  }
  .ctaButton:hover {
    transform: translateY(-2px) scale(1.02);
  }
}